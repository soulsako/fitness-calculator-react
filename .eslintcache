[{"/Users/hmian/Desktop/select-cards-app/src/index.js":"1","/Users/hmian/Desktop/select-cards-app/src/reportWebVitals.js":"2","/Users/hmian/Desktop/select-cards-app/src/App.js":"3","/Users/hmian/Desktop/select-cards-app/src/Stepper.js":"4","/Users/hmian/Desktop/select-cards-app/src/Selectors.js":"5","/Users/hmian/Desktop/select-cards-app/src/Data.js":"6","/Users/hmian/Desktop/select-cards-app/src/AboutYou.js":"7","/Users/hmian/Desktop/select-cards-app/src/Finish.js":"8","/Users/hmian/Desktop/select-cards-app/src/Header.js":"9"},{"size":500,"mtime":1607189059752,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607188307205,"results":"12","hashOfConfig":"11"},{"size":177,"mtime":1607888830257,"results":"13","hashOfConfig":"11"},{"size":8897,"mtime":1607885817932,"results":"14","hashOfConfig":"11"},{"size":3239,"mtime":1607870543658,"results":"15","hashOfConfig":"11"},{"size":2415,"mtime":1607880937789,"results":"16","hashOfConfig":"11"},{"size":4925,"mtime":1607870021158,"results":"17","hashOfConfig":"11"},{"size":6494,"mtime":1607887770307,"results":"18","hashOfConfig":"11"},{"size":1121,"mtime":1607888944842,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1nrbiax",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hmian/Desktop/select-cards-app/src/index.js",[],["41","42"],"/Users/hmian/Desktop/select-cards-app/src/reportWebVitals.js",[],"/Users/hmian/Desktop/select-cards-app/src/App.js",[],"/Users/hmian/Desktop/select-cards-app/src/Stepper.js",[],"/Users/hmian/Desktop/select-cards-app/src/Selectors.js",["43"],"import React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { faWeight, faDumbbell, faUtensils } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  },\n  button: {\n    width: '100%',\n    border: '2px solid #ddd',\n    display: 'flex',\n    padding: '15px 20px',\n    justifyContent: 'flex-start',\n    marginBottom: '15px',\n    borderRadius: '10px',\n  },\n  heading: {\n    padding: '20px 0 10px 0',\n    fontWeight: 'bold'\n  },\n  icon: {\n    fontSize: '35px',\n    color: '#1badb0',\n    marginRight: '25px',\n  },\n  icon_selected: {\n    color: '#ffffff',\n  },\n  text_container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  title: {\n    fontsize: '10px',\n    margin: 0,\n    alignSelf: 'flex-start',\n    textTransform: 'capitalize'\n  },\n  subTitle: {\n    fontSize: '12px',\n    margin: 0,\n    alignSelf: 'flex-start',\n    textTransform: 'capitalize',\n    fontWeight: 100,\n  },\n}));\n\nconst Selectors = ({\n  strTitle,\n  onChange,\n  modelValues,\n  activeStep,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n      <Grid container>\n      <Typography className={classes.heading}>{activeStep === 0 ? \"I would like to...\" : \"My activiy level is...\"}</Typography>\n      <div className={classes.container}>\n        {modelValues.map((objGoal, index) => (\n            <Button key={objGoal.id}\n              className={classes.button}\n              variant=\"contained\"\n              onClick={() => onChange(objGoal.id)}\n              style={{\n                backgroundColor: objGoal.bIsSelected ? '#1badb0' : '#fff',\n                color: objGoal.bIsSelected ? '#ffffff' : '#000000'\n              }}\n            >\n              {index === 0 && objGoal.nodeIcon && (\n              <FontAwesomeIcon icon={faWeight} className={classnames({\n                  [classes.icon]: true,\n                  [classes.icon_selected]: objGoal.bIsSelected,\n                })}\n              />)}\n              {index === 1 && objGoal.nodeIcon && (\n              <FontAwesomeIcon icon={faDumbbell} className={classnames({\n                  [classes.icon]: true,\n                  [classes.icon_selected]: objGoal.bIsSelected,\n                })}\n                transform={{ rotate: 42 }}\n              />)}\n              {index === 2 && objGoal.nodeIcon && (\n              <FontAwesomeIcon icon={faUtensils} className={classnames({\n                  [classes.icon]: true,\n                  [classes.icon_selected]: objGoal.bIsSelected,\n                })}\n              />)}\n              <div className={classes.text_container}>\n                <p className={classes.title}>{objGoal.strTitle}</p>\n                <p className={classes.subTitle}>{objGoal.strSubtitle}</p>\n              </div>\n            </Button>\n        ))},\n      </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Selectors;","/Users/hmian/Desktop/select-cards-app/src/Data.js",[],"/Users/hmian/Desktop/select-cards-app/src/AboutYou.js",[],"/Users/hmian/Desktop/select-cards-app/src/Finish.js",["44","45"],"import React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { faFire, faDna } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst useStyles = makeStyles({\n\n  card_container: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: '25px'\n  },\n  card_container_left: {\n    backgroundColor: '#D1EEEF',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '20px 40px',\n    marginRight: '15px',\n    alignItems: 'center'\n  },\n  card_container_right: {\n    backgroundColor: '#D1EEEF',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '20px 40px',\n    alignItems: 'center'\n  },\n  icon_text: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: '5px'\n  },\n  icons: {\n    fontSize: '14px',\n    color: 'red',\n    marginRight: '8px'\n  },\n  card_text: {\n    fontSize: '10px',\n  },\n  calories: {\n    fontSize: '18px',\n    fontWeight: 'bold',\n    color: '#1badb0'\n  },\n  instructions: {\n    paddingBottom: '15px',\n    textAlign: 'center',\n    marginTop: '20px',\n    marginBottom: '15px'\n  },\n  card: {\n    padding: '0px 15px'\n  },\n  checkbox_container: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '15px'\n  },\n  terms: {\n    fontSize: '10px'\n  },\n  input: {\n    width: '100%',\n    height: '30px',\n    paddingLeft: '10px'\n  },\n  button: {\n    marginRight: \"8px\",\n    display: 'block',\n    width: '100%',\n  },\n  button_right: {\n    backgroundColor: \"#1badb0\",\n    marginBottom: \"10px\",\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    width: '100%',\n    display: 'block',\n    marginTop: '25px'\n  },\n  email_text: {\n    fontSize: '14px',\n    marginBottom: '30px'\n  }\n\n});\n\n\nconst Finish  = ({\n  globalState,\n  activeStep,\n  handleReset\n}) => {\n\n  const classes = useStyles();\n  const [bEmailChecked, setChecked] = useState(false);\n  const [caloriesTarget, setCaloriesTarget] = useState(null);\n  const [proteinTarget, setProtienTarget] = useState(null);\n\n  useEffect(() => {\n\n    let finalCaloriesGoal = 0;\n\n    const getGenderValue = globalState.filter(curr => {\n      return (\n        (curr.id === 'female' && curr.bIsSelected === true) ||\n        (curr.id === 'male' && curr.bIsSelected === true)\n      )\n    });\n    // console.log(\"genderValue\", getGenderValue);\n    const arrMetricIds = ['height', 'weight', 'age'];\n    const getmetrics = globalState.filter(curr => arrMetricIds.includes(curr.id));\n  \n    const reduceToObject = getmetrics.reduce((accum, curr) => {\n      return {\n        ...accum,\n        [curr.id]: {\n          ...curr\n        }\n      }\n    }, {});\n\n    if (getGenderValue[0].id === 'male') {\n      finalCaloriesGoal = (reduceToObject['weight'].intValue * 10) + (reduceToObject['height'].intValue * 6.25) - (reduceToObject['age'].intValue * 5) + 5;\n    } else if (getGenderValue[0].id === 'female') {\n      finalCaloriesGoal = (reduceToObject['weight'].intValue * 10) + (reduceToObject['height'].intValue * 6.25) - (reduceToObject['age'].intValue * 5) - 161;\n    }\n\n    const arrAcitivityLevels = ['sedentary', 'lightly_active', 'moderatly_active', 'very_active'];\n\n    const getActivityLevel = globalState.filter(curr => arrAcitivityLevels.includes(curr.id) && curr.bIsSelected === true);\n\n    getActivityLevel.forEach(({ id }) => {\n      switch (id) {\n        case 'sedentary':\n          finalCaloriesGoal = finalCaloriesGoal * 1.2;\n        break;\n          case 'lightly_active':\n          finalCaloriesGoal = finalCaloriesGoal * 1.4;\n        break;\n          case 'moderatly_active':\n          finalCaloriesGoal = finalCaloriesGoal * 1.6;\n        break;\n          case 'very_active':\n          finalCaloriesGoal = finalCaloriesGoal * 1.8;\n        break;\n          default:\n            return finalCaloriesGoal;\n      }\n    });\n\n\n    const arrGoals = ['lose_fat', 'get_muscle', 'maintain_weight'];\n\n    const getGoals =  globalState.filter(curr => arrGoals.includes(curr.id) && curr.bIsSelected === true);\n\n    getGoals.forEach(({ id }) => {\n      switch (id) {\n        case 'lose_fat':\n          finalCaloriesGoal = finalCaloriesGoal - ((15 /100) * finalCaloriesGoal);\n        break;\n          case 'get_muscle':\n            finalCaloriesGoal = finalCaloriesGoal + ((15 /100) * finalCaloriesGoal);\n        break;\n          default:\n            return finalCaloriesGoal;\n      }\n    });\n\n    setCaloriesTarget(Number(Math.floor(Math.round(finalCaloriesGoal))));\n    \n  },[globalState]);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  return (\n    <div className={classes.card}>\n      <Typography variant=\"h6\" className={classes.instructions}>\n        Your Protein & Calories\n      </Typography>\n      <div className={classes.card_container}>\n        <div className={classes.card_container_left}>\n          <div className={classes.icon_text}>\n          <FontAwesomeIcon icon={faFire} className={classes.icons} />\n            <div className={classes.card_text}>Calories Target</div>\n          </div>\n          <div className={classes.calories}>{caloriesTarget}</div>\n        </div>\n        <div className={classes.card_container_right}>\n          <div className={classes.icon_text}>\n          <FontAwesomeIcon icon={faDna} className={classes.icons} />\n            <div className={classes.card_text}>Protein Target</div>\n          </div>\n          <div className={classes.calories}>174g</div>\n        </div>\n      </div>\n      <p className={classes.email_text}>Enter your best email address below and we'll email you my explanation and keep you in the loop by subscribing you to our famous motivating email list.</p>\n      <input className={classes.input} type=\"text\" placeholder=\"Enter your email...\"/>\n      <div className={classes.checkbox_container}>\n        <Checkbox checked={bEmailChecked} onChange={handleChange} />\n        <p className={classes.terms}>Please tick the box to confirm that you would like to receive the macro break down email and subscribe to the email list.</p>\n      </div>\n      <Button onClick={() => {}} className={classes.button_right}>\n        Send\n      </Button>\n      <Button onClick={handleReset} className={classes.button}>\n        Reset\n      </Button>\n    </div>\n  );\n}\n\nexport default Finish;","/Users/hmian/Desktop/select-cards-app/src/Header.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"54","line":105,"column":10,"nodeType":"52","messageId":"53","endLine":105,"endColumn":23},{"ruleId":"50","severity":1,"message":"55","line":105,"column":25,"nodeType":"52","messageId":"53","endLine":105,"endColumn":41},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'proteinTarget' is assigned a value but never used.","'setProtienTarget' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]