[{"/Users/hmian/Desktop/select-cards-app/src/index.js":"1","/Users/hmian/Desktop/select-cards-app/src/reportWebVitals.js":"2","/Users/hmian/Desktop/select-cards-app/src/App.js":"3","/Users/hmian/Desktop/select-cards-app/src/Stepper.js":"4","/Users/hmian/Desktop/select-cards-app/src/Selectors.js":"5","/Users/hmian/Desktop/select-cards-app/src/Data.js":"6","/Users/hmian/Desktop/select-cards-app/src/AboutYou.js":"7","/Users/hmian/Desktop/select-cards-app/src/Finish.js":"8"},{"size":500,"mtime":1607189059752,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607188307205,"results":"11","hashOfConfig":"10"},{"size":112,"mtime":1607797398651,"results":"12","hashOfConfig":"10"},{"size":6940,"mtime":1607861087151,"results":"13","hashOfConfig":"10"},{"size":3214,"mtime":1607827557859,"results":"14","hashOfConfig":"10"},{"size":2416,"mtime":1607861724803,"results":"15","hashOfConfig":"10"},{"size":4847,"mtime":1607866004913,"results":"16","hashOfConfig":"10"},{"size":6605,"mtime":1607865890458,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1nrbiax",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hmian/Desktop/select-cards-app/src/index.js",[],["36","37"],"/Users/hmian/Desktop/select-cards-app/src/reportWebVitals.js",[],"/Users/hmian/Desktop/select-cards-app/src/App.js",[],"/Users/hmian/Desktop/select-cards-app/src/Stepper.js",[],"/Users/hmian/Desktop/select-cards-app/src/Selectors.js",["38"],"import React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { faWeight, faDumbbell, faUtensils } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  },\n  button: {\n    width: '100%',\n    border: '2px solid #ddd',\n    display: 'flex',\n    padding: '15px 20px',\n    justifyContent: 'flex-start',\n    marginBottom: '15px',\n    borderRadius: '10px',\n  },\n  heading: {\n    paddingBottom: '20px',\n    fontWeight: 'bold'\n  },\n  icon: {\n    fontSize: '35px',\n    color: '#1badb0',\n    marginRight: '25px',\n  },\n  icon_selected: {\n    color: '#ffffff',\n  },\n  text_container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  title: {\n    fontsize: '10px',\n    margin: 0,\n    alignSelf: 'flex-start',\n    textTransform: 'capitalize'\n  },\n  subTitle: {\n    fontSize: '12px',\n    margin: 0,\n    alignSelf: 'flex-start',\n    textTransform: 'capitalize'\n  },\n}));\n\nconst Selectors = ({\n  strTitle,\n  onChange,\n  modelValues,\n  activeStep,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n      <Grid container>\n      <Typography className={classes.heading}>{activeStep === 0 ? \"I would like to...\" : \"My activiy level is...\"}</Typography>\n      <div className={classes.container}>\n        {modelValues.map((objGoal, index) => (\n            <Button key={objGoal.id}\n              className={classes.button}\n              variant=\"contained\"\n              onClick={() => onChange(objGoal.id)}\n              style={{\n                backgroundColor: objGoal.bIsSelected ? '#1badb0' : '#fff',\n                color: objGoal.bIsSelected ? '#ffffff' : '#000000'\n              }}\n            >\n              {index === 0 && objGoal.nodeIcon && (\n              <FontAwesomeIcon icon={faWeight} className={classnames({\n                  [classes.icon]: true,\n                  [classes.icon_selected]: objGoal.bIsSelected,\n                })}\n              />)}\n              {index === 1 && objGoal.nodeIcon && (\n              <FontAwesomeIcon icon={faDumbbell} className={classnames({\n                  [classes.icon]: true,\n                  [classes.icon_selected]: objGoal.bIsSelected,\n                })}\n                transform={{ rotate: 42 }}\n              />)}\n              {index === 2 && objGoal.nodeIcon && (\n              <FontAwesomeIcon icon={faUtensils} className={classnames({\n                  [classes.icon]: true,\n                  [classes.icon_selected]: objGoal.bIsSelected,\n                })}\n              />)}\n              <div className={classes.text_container}>\n                <p className={classes.title}>{objGoal.strTitle}</p>\n                <p className={classes.subTitle}>{objGoal.strSubtitle}</p>\n              </div>\n            </Button>\n        ))},\n      </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Selectors;","/Users/hmian/Desktop/select-cards-app/src/Data.js",[],"/Users/hmian/Desktop/select-cards-app/src/AboutYou.js",[],"/Users/hmian/Desktop/select-cards-app/src/Finish.js",["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":105,"column":10,"nodeType":"47","messageId":"48","endLine":105,"endColumn":23},{"ruleId":"45","severity":1,"message":"50","line":105,"column":25,"nodeType":"47","messageId":"48","endLine":105,"endColumn":41},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'proteinTarget' is assigned a value but never used.","'setProtienTarget' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]